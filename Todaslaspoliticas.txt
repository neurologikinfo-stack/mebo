[
  {
    "policy_sql": "CREATE POLICY \"dev read appts\" ON \"public\".\"appointments\" FOR SELECT TO public USING (true) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"dev update appts\" ON \"public\".\"appointments\" FOR UPDATE TO public USING (true) WITH CHECK (true);"
  },
  {
    "policy_sql": "CREATE POLICY \"dev write appts\" ON \"public\".\"appointments\" FOR INSERT TO public WITH CHECK (true);"
  },
  {
    "policy_sql": "CREATE POLICY \"dev read businesses\" ON \"public\".\"businesses\" FOR SELECT TO public USING (true) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"public read businesses\" ON \"public\".\"businesses\" FOR SELECT TO anon USING (true) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"dev read customers\" ON \"public\".\"customers\" FOR SELECT TO public USING (true) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"dev write customers\" ON \"public\".\"customers\" FOR INSERT TO public WITH CHECK (true);"
  },
  {
    "policy_sql": "CREATE POLICY \"cada usuario puede actualizar su perfil excepto role\" ON \"public\".\"profiles\" FOR UPDATE TO public USING (((auth.uid())::text = clerk_id)) WITH CHECK (((auth.uid())::text = clerk_id));"
  },
  {
    "policy_sql": "CREATE POLICY \"cada usuario puede ver su perfil\" ON \"public\".\"profiles\" FOR SELECT TO public USING (((auth.uid())::text = clerk_id)) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"read_own_profile\" ON \"public\".\"profiles\" FOR SELECT TO public USING (((auth.uid())::text = clerk_id)) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"solo admin puede cambiar role\" ON \"public\".\"profiles\" FOR UPDATE TO public USING (((auth.jwt() ->> 'role'::text) = 'admin'::text)) WITH CHECK (true);"
  },
  {
    "policy_sql": "CREATE POLICY \"solo admin puede cambiar roles\" ON \"public\".\"profiles\" FOR UPDATE TO public USING (((auth.jwt() ->> 'role'::text) = 'admin'::text)) WITH CHECK (((auth.jwt() ->> 'role'::text) = 'admin'::text));"
  },
  {
    "policy_sql": "CREATE POLICY \"update_own_profile\" ON \"public\".\"profiles\" FOR UPDATE TO public USING (((auth.uid())::text = clerk_id)) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"admin can delete role changes\" ON \"public\".\"role_changes\" FOR DELETE TO authenticated USING (((auth.jwt() ->> 'role'::text) = 'admin'::text)) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"admin can modify role changes\" ON \"public\".\"role_changes\" FOR UPDATE TO authenticated USING (((auth.jwt() ->> 'role'::text) = 'admin'::text)) WITH CHECK (((auth.jwt() ->> 'role'::text) = 'admin'::text));"
  },
  {
    "policy_sql": "CREATE POLICY \"service role can insert role changes\" ON \"public\".\"role_changes\" FOR INSERT TO service_role WITH CHECK (true);"
  },
  {
    "policy_sql": "CREATE POLICY \"Allow admins full access\" ON \"public\".\"roles\" FOR ALL TO public USING ((EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.clerk_id = (auth.uid())::text) AND (p.role = 'admin'::text))))) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"dev read schedules\" ON \"public\".\"schedules\" FOR SELECT TO public USING (true) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"dev read services\" ON \"public\".\"services\" FOR SELECT TO public USING (true) ;"
  },
  {
    "policy_sql": "CREATE POLICY \"dev read staff\" ON \"public\".\"staff\" FOR SELECT TO public USING (true) ;"
  }
]